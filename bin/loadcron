#!/bin/sh

# Construct a crontab based on files in ~/.config/cron and load it
# into cron.  The file ~/.config/cron/username/fqdn is appended to the
# common file in the same directory. Note that the common file may
# have "$HOME" in it, as in "PATH=$HOME/bin". cron is too dumb to deal
# with that, so the expansion is handled by this script.

# This script was originally written by Joey Hess:
# http://git.kitenet.net/?p=joey/home.git;a=blob;f=bin/loadcron

set -e

WARNING="# Automatically generated by loadcron; edit ~/.config/cron/ files instead."

if [ ! -z "`crontab -l`" ] && ! crontab -l | grep -q "$WARNING"; then
    if [ "$1" != "-f" ]; then
	echo "loadcron: Current crontab was not generated by loadcron; not changing." >&2
	echo "loadcron: Use loadcron -f to override"
	exit 1
    else
	crontab -l > $HOME/tmp/oldcrontab
	echo "loadcron: Old crontab is backed up to $HOME/tmp/oldcrontab"
    fi
fi

dir=$HOME/.config/cron/`whoami`
if [ -d "$dir" ]; then
    hostfile="$dir/`hostname -f`"
    if [ ! -e "$hostfile" ]; then
        echo "loadcron: $hostfile does not exist, not loading" >&2
    fi
    (
	echo "$WARNING"
	echo
	if [ -e "$dir/common" ]; then
	    echo "# From $dir/common:"
	    sed "s!\$HOME!$HOME!g" < "$dir/common"
	    echo
	fi
	hostfile="$dir/`hostname -f`"
	if [ -e "$hostfile" ]; then
	    echo "# From $hostfile:"
	    cat "$hostfile"
	    echo
	fi
        # anacron: disabled because I don't have any useful anacron
        # jobs on any hosts at present
        # hostanacrontab=$HOME/.config/anacron/$(whoami)_$(hostname -f)
        # mkdir -p $HOME/local/anacron/spool
        # if [ -e "$hostanacrontab" ]; then
        #     echo "# Personal anacron:"
        #     echo "0 8 * * * anacron -s -t $hostanacrontab -S $HOME/local/anacron/spool"
        #     echo "@reboot   anacron -s -t $hostanacrontab -S $HOME/local/anacron/spool"
        #     echo
        # fi
    ) | crontab -
fi

units=$HOME/.config/host-user-units/`hostname -f`
if [ -e "$units" ]; then
    cat "$units" | while read unit; do
        systemctl --user enable "$unit"
    done
fi
