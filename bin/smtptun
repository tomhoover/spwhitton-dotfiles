#!/bin/sh
. $HOME/.shenv

# Make a tunnel with SSH to send e-mail via the SDF mail exchanger,
# and then netcat to that tunnel.  Designed to be run by xinetd.

# An alternative approach is to just run `ssh foo@bar nc ..' but doing
# it with a port-forward means that our SSH can be restricted to the
# command rrsync and a particular port-forward, rather than netcat so
# we can use one SSH key for both purposes.

# Interesting notes for doing this on Windows:
# <http://www.greenend.org.uk/rjk/sshfwd/>

SOCKET="$HOME/tmp/smtptun_sock"
ALTSOCKET="/tmp/ssh-swhitton-spw@ma.sdf.org:22"
REMHOST="spw@ma.sdf.org"
FORWARD="-L localhost:8025:mx.sdf.org:25"

# First see if I'm SSHing to the MetaArray already.  Requires running
# as root in order to be able to command the socket to add the port
# forward.

if ssh -O check -S $ALTSOCKET $REMHOST 2>/dev/null; then
    ssh -O forward $FORWARD -S $ALTSOCKET $REMHOST
else

    # Now see if another invocation of this script has already constructed a tunnel.
    if ! ssh -O check -S $SOCKET $REMHOST 2>/dev/null; then

        # Okay, we'd better set-up a tunnel.  Make it only accessible from
        # localhost and have it time out after two minutes of no e-mails
        # getting sent down it.

        ssh -M -S $SOCKET -o "ControlPersist=120s" \
            -f -N $FORWARD $REMHOST # `-i /root/.ssh/id_rsa' is implicit

    fi
fi

# Now connect to the tunnel we just made.

nc localhost 8025
