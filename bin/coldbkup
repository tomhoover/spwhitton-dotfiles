#!/bin/bash

# backup to removable, offline media

. $HOME/.shenv
. $HOME/lib/tputfs.sh

set -e

# determine removable media available and if it's m3, sync annex content
if mount | grep -q "/media/${USER}/m3"; then
    HDD=/media/${USER}/m3
    status syncing annex content
    # we sync both ma and m3 here so that ma knows everything that got
    # put onto m3
    git annex sync --content ma m3
elif mount | grep -q "/media/${USER}/bkupsd"; then
    HDD=/media/${USER}/bkupsd
else
    echo "coldbkup: removable media not mounted" >&2
    exit 1
fi
DEST=${HDD}/git
mkdir -p $DEST

# function to backup a repo: first arg is ssh path to repo, second arg
# is where to put it
gitbk ()
{
    local long=$1
    local short=$(basename $long)
    local dest=$2
    if [ -e "$dest/$short" ]; then
        cd $dest/$short
        git fetch origin "+refs/heads/*:refs/heads/*" --prune
    else
        mkdir -p $dest
        cd $dest
        git clone --mirror $long $short
    fi
}

# backup a repo from github
githubbk ()
{
    status processing $1 from github
    gitbk git@github.com:$1 $DEST/github
}

# Stage 1 : Backup repos hosted on ma

# TODO: don't use ls here (see http://mywiki.wooledge.org/ParsingLs)

repos=$(ssh ma ls \$HOME/local/git)
for repo in $repos; do
    status processing $repo from ma
    # TODO: maybe just move all gcrypt repos into a separate dir and
    # then loop through them (only have one right now so not worth it)
    if [ "$repo" = "priv.git" ]; then
        gitbk gcrypt::ssh://ma/~/local/git/$repo $DEST/ma
    else
        gitbk ma:local/git/$repo $DEST/ma
    fi
done

# Stage 1.5 : Backup repos hosted on athena

# TODO: don't use ls here (see http://mywiki.wooledge.org/ParsingLs)

repos=$(ssh athena ls /home/git)
for repo in $repos; do
    status processing $repo from athena
    if [ "$repo" = "priv.git" -o "$repo" = "annex.git" -o "$repo" = "rt.git" ]; then
        gitbk gcrypt::git@spwhitton.name:${repo%.*} $DEST/athena
    else
        gitbk git@spwhitton.name:${repo%.*} $DEST/athena
    fi
done

# Stage 2 : Backup some repos hosted on github (the ones I care about).

# TODO: consider using joeyh's github-backup program

githubbk spwhitton/propellor.git

# Stage 3 : Backup other repos ad hoc

status processing blog comments
gitbk ma:html/blog/comments $DEST/other
