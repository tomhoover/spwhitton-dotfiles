# -*- mode: sh -*-

# --- global settings

[DEFAULT]
git_gc = git gc "$@"
jobs = 5

# --- Adam Spiers' plugin for managing dotfile symlinks with mr

include =
    if [ -e ~/lib/mr/stow ]; then
        cat ~/lib/mr/stow
    else
        cat ~/local/lib/stow
    fi
lib =
    # reimplement kitenet-mr stow library function which relies on mr
    # "-r" parameter which is only present in aspiers' outdated fork
    is_stowable () {
            [ -z "$MR_DISABLE_STOW" ] &&
            ( mr stowable >/dev/null 2>&1 )
        }

# --- primary dotfiles repository

[src/dotfiles]
lib =
        # manually set a variable that aspiers' outdated fork of mr
        # sets, that his kitenet-mr stow library needs
        MR_NAME=dotfiles

stowable = true
checkout = git clone http://spw.sdf.org/git/dotfiles.git dotfiles

# skip this repository if stow is not installed.  This should be a
# prompt to download a tarball, and do
#       ./configure --prefix=$HOME/local && make install
skip = ! whereis stow >/dev/null

# stow won't overwrite a real ~/.mrconfig with a symlink to the
# version in my dotfiles repository.  Cannot just delete .mrconfig
# before a stow, because then mr can't tell stow what to do.  So just
# do it with manual fixup and have stow ignore this file.  Name is
# different to avoid mr trying to chain load it at any point

# similarly for .stow-global-ignore
fixups =
    ln -sf ~/src/dotfiles/home-mrconfig ~/.mrconfig
    ln -sf ~/src/dotfiles/.stow-global-ignore ~

# --- private dotfiles repository

[src/priv]
lib =
        # manually set a variable that aspiers' outdated fork of mr
        # sets, that his kitenet-mr stow library needs
        MR_NAME=priv
stowable = true
checkout = git clone /s3ql/gitcrypt/priv.git priv

# this repository can't be checked out until we put the authorisation
# tokens in place manually, so that's a good enough indication as to
# whether we want it on a host
skip = ! [ -e ~/.s3ql/authinfo2 ]

# convenience automatic permission setting and checking in of
# frequently changed files
fixups = chmod 600 .passwddb.pet .s3ql/authinfo2
pre_update =
           git add .passwddb.pet .labbook.gpg
           git commit -a -m "auto passwddb and labbook commit on $(hostname -s)" || true

# --- source code repositories registered to their own mr config file,
# --- and create my standard home directory subdirectories

[src]
update = mkdir -p $HOME/tmp $HOME/src $HOME/local/src $HOME/local/bin $HOME/local/lib $HOME/local/pub
checkout = mkdir -p $HOME/tmp $HOME/src $HOME/local/src $HOME/local/bin $HOME/local/lib $HOME/local/pub
status = :
#push = :
#commit = :
chain = true

# --- temporary inclusion of old mr repository configurations

include = cat ~/local/lib/vcsh
include = cat ~/.config/mr/config.d/*
